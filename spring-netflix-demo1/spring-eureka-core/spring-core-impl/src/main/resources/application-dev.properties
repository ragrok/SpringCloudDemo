server.port=8082
spring.application.name=spring-eureka-core
#开放所有页面节点  默认只开启了health、info两个节点
management.endpoint.conditions.enabled=true
management.endpoints.web.exposure.include=*
#Eureka配置
eureka.instance.appname=${spring.application.name}
#eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
eureka.instance.ip-address=192.168.47.1
eureka.instance.instanceId=${spring.application.name}:${eureka.instance.ip-address}:${server.port}
#server设置
#eureka.server.eviction-interval-timer-in-ms=120
#eureka.server.enable-self-preservation=true
#eureka.server.renewal-percent-threshold=0.9
#client设置
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.eureka-server-connect-timeout-seconds=120
eureka.client.eureka-connection-idle-timeout-seconds=120
eureka.client.eureka-server-read-timeout-seconds=120
eureka.client.service-url.defaultZone=http://192.168.47.142:8761/eureka/
#feign
feign.client.config.default.connectTimeout=5000
feign.client.config.default.readTimeout=5000
feign.hystrix.enabled=true
#logging
logging.level.root=info
#============== kafka ===================
spring.kafka.bootstrap-servers=192.168.47.142:9092
#=============== provider =======================
spring.kafka.producer.retries=0
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#=============== consumer =======================
spring.kafka.consumer.group-id=test-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#kafka的访问路径的配置
spring.cloud.stream.kafka.binder.brokers=192.168.47.142:9092
#ZooKeeper的基本配置
#spring.cloud.stream.kafka.binder.zkNodes=192.168.126.130:2181
#spring.cloud.stream.kafka.binder.defaultZkPort=2181